# We define a template that can be extended in order to execute jobs (passed ad parameters)
# in a container which is disconnected from Internet (for security issues).

resources:
  containers:
    - container: mycontainer
      image: ubuntu:20.04
      options: '--cap-add=NET_ADMIN --name mycontainer1'

parameters:
  - name: 'jobsList'
    type: jobList
    default: []
  - name: 'requiredPreSteps'
    type: stepList
    default: []

jobs:
  - ${{ each job in parameters.jobsList }}:      # Process Each job
      - ${{ each pair in job }}:
          ${{ if ne(pair.key, 'steps') }}:       # Insert all properties other than "steps"
            ${{ pair.key }}: ${{ pair.value }}
        steps:                                   # Wrap the steps

          - ${{ each prestep in parameters.requiredPreSteps }}:
            - ${{ each ps in prestep }}:
                ${{ ps.key }}: ${{ ps.value }}
              target:
                container: mycontainer

          - script: |
              docker exec mycontainer1 apt-get update
              docker exec mycontainer1 apt-get install -y iptables
              docker exec mycontainer1 iptables -F

              docker exec mycontainer1 iptables -P INPUT DROP
              docker exec mycontainer1 iptables -A INPUT -i lo -j ACCEPT
              docker exec mycontainer1 iptables -A INPUT -m state --state INVALID -j DROP
              docker exec mycontainer1 iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

              docker exec mycontainer1 iptables -P OUTPUT DROP
              docker exec mycontainer1 iptables -A OUTPUT -o lo -j ACCEPT
              docker exec mycontainer1 iptables -A OUTPUT -m state --state INVALID -j DROP
              docker exec mycontainer1 iptables -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
              docker exec mycontainer1 iptables -A OUTPUT -p tcp -m tcp --dport 443 -j ACCEPT

              docker exec mycontainer1 iptables -A OUTPUT -p tcp -m tcp --dport 53 -j ACCEPT
              docker exec mycontainer1 iptables -A OUTPUT -p udp -m udp --dport 53 -j ACCEPT

            displayName: 'iptables install'
            target: host

          - ${{ each step in job.steps }}:         # Finally insert the users steps defined in the job
              - ${{ each p in step }}:
                  ${{ p.key }}: ${{ p.value }}
                target:
                  container: mycontainer
                  commands: restricted
